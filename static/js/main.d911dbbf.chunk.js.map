{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/UI/Card.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","hooks/use-http.js","lib/api.js","pages/AllQuotes.js","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","loadedQuotes","useEffect","length","HighlightedQuote","NewCommentForm","commentTextRef","useRef","onAddedComment","submitFormHandler","event","preventDefault","enteredText","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommenHandler","QuoteDetail","match","useRouteMatch","path","exact","url","Card","card","children","QuoteForm","isEntering","setIsEntering","authorInputRef","textInputRef","when","onFocus","enteredAuthor","onAddQuote","isLoading","loading","NewQuote","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d911dbbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__351PK\",\"loading\":\"QuoteForm_loading__EE8Eg\",\"control\":\"QuoteForm_control__3Wqp5\",\"actions\":\"QuoteForm_actions__Kv120\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__uJ_Qw\",\"logo\":\"MainNavigation_logo__3GYc6\",\"nav\":\"MainNavigation_nav__2FvhP\",\"active\":\"MainNavigation_active__1pSBh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__20_vm\",\"loading\":\"NewCommentForm_loading__lLEUe\",\"control\":\"NewCommentForm_control__2HLad\",\"actions\":\"NewCommentForm_actions__1eViB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2PL-_\",\"sorting\":\"QuoteList_sorting__3u1n3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2zP2-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__35nIT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1T-nL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2G7TE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1cZWU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1DEaP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1stlE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1MCDX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__bP6SS\"};","import { Link } from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n    }); \n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-http-5b8c0-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { useEffect } from \"react\";\r\n\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\"; \r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered focused'>{error}</p>;\r\n  }\r\n\r\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef, useEffect } from \"react\"; \n\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef(); \n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n \n\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({ commentData: {text: enteredText}, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommenHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No Comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommenHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport { Fragment, useEffect } from \"react\";\r\n\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n\r\n  const { quoteId } = params;\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered'>{error}</p>\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>;\r\n  } \r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport { Fragment } from \"react/cjs/react.production.min\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Are you sure you want to leave? All your entered data will be lost!\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nconst NewQuote = () => { \r\n    const {sendRequest, status } = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history]);\r\n\r\n    const addQuoteHandler = quoteData => {\r\n        sendRequest(quoteData); \r\n    }\r\n\r\n    return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n};\r\n\r\nexport default NewQuote;","import { NavLink } from \"react-router-dom\";\r\n\r\nimport classes from \"./MainNavigation.module.css\";\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { Fragment } from \"react\";\r\n\r\nimport classes from \"./Layout.module.css\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","const NotFound = () => {\r\n  return (\r\n    <div className=\"centered\">\r\n      <p> Page not Found!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AllQuotes from \"./pages/AllQuotes\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport NewQuote from \"./pages/NewQuote\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote />\n        </Route>\n        <Route path='*'>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}